#!/bin/bash

#
# Configuration file for the CRISPRCasFinder and parsing pipeline. 
# Controls: Input and Output directories
# 	    Date (Download date of data)
#	    Path to Singularity containers
# 	    Execution command (force new / launch)
#

#ORGANISM=$1





# Declare paths here. Can be executed from the other scripts to have access to all the paths shortcuts. 
# Directories will be created in CRISPRscope_init.sh



#==============================================================================
# Paths / Directories
#==============================================================================


# Directory containing the assemblies. The assemblies must be stored in folders called "Organisms" here
# but the name is arbitrary. Basically all the strains from a group will be in a directory.

# The source is usefull for the file preprocessing. It copies files from the download folder to the input directory that CCF will use. 


#SOURCE_TYPE=NCBI
SOURCE_TYPE=DIALACT

#DATE=20201110
#DATE=20201201
#DATE=20210406
#DATE=20210510
#DATE=20210511
#DATE=SEL185
DATE=SELDIALACT
#SOURCE=/data/projects/p539_crisprscope/TMP_SOURCE_NCBI/${DATE}

SOURCE=/data/projects/p539_crisprscope/TMP_SOURCE_DIALACT/${DATE}


#SOURCE=/data/projects/p539_crisprscope/stuff_simone

# Root of the project. Needed to bind within the Singularity container. Needs to contain the scripts and
# all the data.

ROOTDIR=..

# Contains the assemblies. The same structure as SOURCE will be kept (folders by organisms containing
# the related assembles by strain). The fasta files need to be adapted for CRISPRCasFinder and thus
# they will be copied and modified here.

DATA=../0_data/assemblies



# Input directory:
# Assemblies will be copied here here in specific organism folders (folder created bellow)
INDIR=${DATA}/${SOURCE_TYPE}/${DATE}/${ORGANISM}

# Directory where this script is stored (wow so useful !)
SCRIPTDIR=.

# Output directory, will be passed to CRISPRCasFinder. Is emptied first if force_new is set to true.
#OUTDIR=./Output_CRISPRCasFinder/${ORGANISM}/${SOURCE_TYPE}
#NEW
OUTDIR=./Output_CRISPRCasFinder/${DATE}/${SOURCE_TYPE}/${ORGANISM}

# Directory containing the parsed CRISPRCasFinder results
#PARSDIR=./Parsed_Output/${ORGANISM}/${SOURCE_TYPE}
#NEW
PARSDIR=./Parsed_Output/${DATE}/${SOURCE_TYPE}/${ORGANISM}

# Directory for clustering input / output
INDIR_CLST=${PARSDIR}
OUTDIR_CLST=${INDIR_CLST}/${ORGANISM}_clustering





#==============================================================================
# Software / container
#==============================================================================
CONTAINER=/software/singularity/containers/CRISPRCasFinder-4.2.20-1.ubuntu16.sif

# Local container
# CONTAINER_LOC=.
# ${CONTAINER_LOC}/CrisprCasFinder.simg



#==============================================================================
# Control variables
#==============================================================================


# If true, directly launch the SBATCH task (TSKS) after creating
launch=true

# Force calculation of new results (Delete all previous results for this organism)
# Use carefully, it takes time to re-compute everything.
force_new=false

# Set to true to ignore all the CRISPRCasFinder part and do only the parsing.
# results must exist
parsonly=false 




#===========================================================
#
# CREATE THE DIRECTORIES
#
#===========================================================

#-----------------------------------------------------------
# Creates the directories if first run
#  otherwise please ignore the error
# If the files have already been processed,
#  use launch / force_new above to manage what will happen
#-----------------------------------------------------------

# Copied assemblies, will be modified (format)
mkdir -p ${INDIR}

# Creates the CRISPRCasFinder output directory for the organism
mkdir -p ${OUTDIR}

# Future output for the parsed files
mkdir -p ${PARSDIR}

# Removes clustering directory if exist and creates them (empty)
#rm -r ${OUTDIR_CLST}
#mkdir -p ${OUTDIR_CLST}/singleton_clusters_spacers
#mkdir -p ${OUTDIR_CLST}/singleton_clusters_repeats




























